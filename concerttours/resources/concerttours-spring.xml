<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd"
    >
    <!--settea el context-->
    <context:component-scan base-package="concerttours"/>

    <!-- setea el servicio de la extension -->
    <bean id="concerttoursService" class="concerttours.service.impl.DefaultConcerttoursService">
        <!-- setter injection example -->
        <property name="modelService" ref="modelService"/>
        <property name="mediaService" ref="mediaService"/>
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>

    <!-- setea la configuracion de la extension -->
    <bean id="ConcerttoursCustomSetup" class="concerttours.setup.ConcerttoursCustomSetup">
        <property name="importService" ref="importService"/>
    </bean>

    <!--setea como bean el servicio-->
    <alias name = "defaultBandService" alias = "bandService" />
    <bean id = "defaultBandService" class = "concerttours.service.impl.DefaultBandService" >
    <property name = "bandDAO" ref = "bandDAO" />
    </bean>

    <!-- seta como bean el band facade-->
    <alias name = "defaultBandFacade" alias = "bandFacade" />
    <bean id = "defaultBandFacade" class ="concerttours.facades.impl.DefaultBandFacade" >
        <property name = "bandService" ref = "bandService" />
    </bean>

    <!-- setea como bean el tourfacade -->
    <alias name = "defaultTourFacade" alias = "tourFacade" />
    <bean id = "defaultTourFacade" class ="concerttours.facades.impl.DefaultTourFacade" >
        <property name = "productService" ref = "productService" />
    </bean>

    <!-- setea el bean del handler del atributo dinamico -->
    <bean id="concertDaysUntilAttributeHandler" class="concerttours.attributehandlers.ConcertDaysUntilAttributeHandler"/>

    <!-- declaro el eventlistener como un bean-->
    <bean id="concerttourEventListener" class="concerttours.events.NewBandEventListener" parent="abstractEventListener">
        <property name="modelService" ref="modelService" />
    </bean>

    <!-- bean interceptors-->
    <bean id="bandAlbumSalesInterceptor" class="concerttours.interceptors.BandAlbumSalesInterceptor" />
    
    <bean id="BandInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
      <property name="interceptor" ref="bandAlbumSalesInterceptor" />
      <property name="typeCode" value="Band" />
      </bean>
      <bean id="bandAlbumSalesEventListener" class="concerttours.events.BandAlbumSalesEventListener" parent="abstractEventListener" >
      <property name="modelService" ref="modelService" />
    </bean>
</beans>
